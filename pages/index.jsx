import Head from "next/head";
import Image from "next/image";
import SideBar from "@/components/SideBar";
import Header from "@/components/Header";
import { getDateTimeNow } from "@/utils/getDateTimeNow";
import React, { Fragment, useEffect, useState } from "react";
import Select from "react-select";
import makeAnimated from "react-select/animated";
import { useSelector } from "react-redux";
import { getAPI, postAPI } from "@/utils/fetchAPIs";
import { useRouter } from "next/router";
import { toast } from "react-toastify";
import { CronJob } from "cron";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faClose, faPen } from "@fortawesome/free-solid-svg-icons";
import DateTimePicker from "react-datetime-picker";
import "react-datetime-picker/dist/DateTimePicker.css";
import "react-calendar/dist/Calendar.css";
import "react-clock/dist/Clock.css";

import { screensData } from "@/data/ScreensData";

export default function Home() {
  const startAllScreens = async () => {
    const data = await getAPI("screenOnAll", null);
    if (data.status) {
      toast.success("All Screens are started!");
    }
  };
  const stopAllScreens = async () => {
    const data = await getAPI("screenOffAll", null);
    if (data.status) {
      toast.success("All Screens are stopped!");
    }
  };
  const startScreen = async (item) => {
    const data = await postAPI("screenOn", item, null);
    if (data.status) {
      toast.success("Screens is started!");
    }
  };
  const stopScreen = async (item) => {
    const data = await postAPI("screenOff", item, null);
    if (data.status) {
      toast.success("Screens is stopped!");
    }
  };

  const checkStatus = async (item) => {
    const data = await postAPI("screenCheck", item, null);
    console.log(data);
    if (data.status) {
      toast.success(`${item?.name} is ON!`);
    } else {
      toast.error(`${item?.name} is OFF!`);
    }
  };

  return (
    <>
      <Head>
        <title>Centralized OPL</title>
        <meta name="description" content="Generated by Centralized OPL" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="d-flex flex-column flex-root">
          <div className="page d-flex flex-row flex-column-fluid">
            <SideBar />
            <div className="wrapper d-flex flex-column flex-row-fluid">
              <Header title={"START SCREENS"} />
              <div className="content d-flex flex-column flex-column-fluid">
                <div className="post d-flex flex-column-fluid">
                  <div id="kt_content_container" className="container-xxl">
                    <div className="row g-5 g-xl-8">
                      <div className="col-12">
                        <div className="screen_header">
                          <div className="screen_header_top">
                            <h2>
                              Welcome <span>Admin</span>
                            </h2>
                          </div>
                        </div>
                      </div>
                      <div className="col-12">
                        <div className="card card-xxl-stretch mb-5 mb-xxl-8">
                          <div className="card-header border-0 pt-5">
                            <h3 className="card-title align-items-start flex-column">
                              <span className="card-label fw-bold fs-3 mb-1">
                                Screens
                              </span>
                              <span className="text-muted mt-1 fw-semibold fs-7">
                                Total {screensData && screensData.length}{" "}
                                Screens
                              </span>
                            </h3>
                            <div>
                              <button
                                onClick={() => startAllScreens()}
                                className="btn btn-success btn-sm me-1"
                              >
                                START ALL
                              </button>
                              <button
                                onClick={() => stopAllScreens()}
                                className="btn btn-danger btn-sm me-1"
                              >
                                STOP ALL
                              </button>
                            </div>
                          </div>
                          <div className="card-body py-3">
                            <div className="tab-content">
                              <div className="table-responsive">
                                <table className="table table-striped table-bordered table_height">
                                  <thead>
                                    <tr className="border-0">
                                      <th>SL No.</th>
                                      <th>Screen Name</th>
                                      <th>Screens IP Address</th>
                                      <th>Status</th>
                                      <th className=" min-w-140px">Action</th>
                                    </tr>
                                  </thead>
                                  <tbody>
                                    {screensData &&
                                      screensData.map((item, index) => (
                                        <tr key={index}>
                                          <td className="fw-semibold">
                                            {index + 1}
                                          </td>
                                          <td className="fw-semibold">
                                            {item?.name}
                                          </td>
                                          <td className="fw-semibold">
                                            {item?.host}
                                          </td>
                                          <td>
                                            <button
                                              onClick={() => checkStatus(item)}
                                              className="btn btn-info btn-sm me-1"
                                            >
                                              Check Status
                                            </button>
                                          </td>
                                          <td>
                                            <button
                                              onClick={() => startScreen(item)}
                                              className="btn btn-success btn-sm me-1"
                                            >
                                              START
                                            </button>
                                            <button
                                              onClick={() => stopScreen(item)}
                                              className="btn btn-danger btn-sm me-1"
                                            >
                                              STOP
                                            </button>
                                          </td>
                                        </tr>
                                      ))}
                                  </tbody>
                                </table>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
