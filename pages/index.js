import Head from "next/head";
import Image from "next/image";
import SideBar from "@/components/SideBar";
import Header from "@/components/Header";
import { getDateTimeNow } from "@/utils/getDateTimeNow";
import React, { useEffect, useState } from "react";
import Select from "react-select";
import makeAnimated from "react-select/animated";
import { useSelector } from "react-redux";
import { getAPI, postAPI } from "@/utils/fetchAPIs";
import { useRouter } from "next/router";
import { toast } from "react-toastify";

const options = [
  { value: "Screen1", label: "Screen1" },
  { value: "Screen2", label: "Screen2" },
  { value: "Screen3", label: "Screen3" },
];

const animatedComponents = makeAnimated();

export default function Home() {
  const router = useRouter();
  const { loginToken } = useSelector((state) => state.authReducer);
  const [isLoading, setIsLoading] = useState(false);
  const [products, setProducts] = useState(null);
  const [shifts, setShifts] = useState(null);
  const [selected, setSelected] = useState({
    product_id: "",
    shift_id: "",
  });
  const [oplData, setOplData] = useState(null);
  const [dateTimeNow, setDateTimeNow] = useState();

  useEffect(() => {
    (async () => {
      if (selected?.product !== "" && selected?.shift !== "") {
        let res = await postAPI("dashboard", selected);
        if (res?.status) {
          setOplData(res?.data);
        }
      }
    })();
  }, [selected]);

  useEffect(() => {
    let dateTime = getDateTimeNow();
    setDateTimeNow(dateTime);
  }, []);

  const getData = async () => {
    setIsLoading(true);
    const data = await getAPI("products", null);
    if (data?.status) {
      setProducts(data?.data);
      setIsLoading(false);
    } else {
      setIsLoading(false);
      toast.error("Something went wrong", data?.message);
    }
  };
  const getShifts = async () => {
    setIsLoading(true);
    const data = await getAPI("shifts", null);
    if (data?.status) {
      setShifts(data?.data);
      setIsLoading(false);
    } else {
      setIsLoading(false);
      toast.error("Something went wrong", data?.message);
    }
  };

  useEffect(() => {
    getShifts();
    getData();
  }, []);

  useEffect(() => {
    (async function () {
      let token = { loginToken };
      let isAuth = await postAPI("isAuth", token, null);
      if (!isAuth?.status) {
        router.push("/login");
      }
    })();
  }, [loginToken, router]);

  const OPLHandler = async () => {
    let oplSendFile = oplData.map((item, index) => {
      return {
        current_shift: item?.shift_id,
        current_screen: item?.screen_ip,
        current_img: item?.opl,
        current_product: item?.product_id,
      };
    });
    console.log("OPLHandler", oplSendFile);

    // add data to current table
    await oplSendFile.map(async (item, index) => {
      const data = await postAPI("current", item, null);
      if (data?.status) {
        toast.success(`Image ${index + 1} sent succesfully`);
      } else {
        toast.error(`Product is not added. ${data?.message}`);
      }
    });

    let requestOptions = {
      method: "GET",
      redirect: "follow",
    };

    // call opl
    await oplSendFile.map(async (item, index) => {
      await fetch(
        `${process.env.NEXT_PUBLIC_BACKEND_API}/oplCon`,
        requestOptions
      )
        .then((response) => response.text())
        .then((result) => console.log(result))
        .catch((error) => console.log("error", error));

      toast.success(`Instruction ${index} sent successfully`);
    });
  };

  return (
    <>
      <Head>
        <title>Centralized OPL</title>
        <meta name="description" content="Generated by Centralized OPL" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="d-flex flex-column flex-root">
          <div className="page d-flex flex-row flex-column-fluid">
            <SideBar />
            <div className="wrapper d-flex flex-column flex-row-fluid">
              <Header title={"Dashboard"} />
              <div
                className="content d-flex flex-column flex-column-fluid"
                id="kt_content"
              >
                <div className="post d-flex flex-column-fluid">
                  <div id="kt_content_container" className="container-xxl">
                    <div className="row g-5 g-xl-8">
                      <div className="col-12">
                        <div className="screen_header">
                          <div className="screen_header_top">
                            <h2>
                              Welcome <span>Mrinmoy</span>
                              <br />
                              <p className="dateTime">
                                <span>{dateTimeNow}</span>
                              </p>
                            </h2>
                            <div className="choose">
                              <label htmlFor="shifts">Choose Shift</label>
                              <select
                                id="shifts"
                                onChange={(e) =>
                                  setSelected({
                                    ...selected,
                                    shift_id: e.target.value,
                                  })
                                }
                              >
                                <option>Choose shift</option>
                                {shifts &&
                                  shifts.map((item, index) => (
                                    <option key={index} value={item?.shift_id}>
                                      {item?.shift_name}
                                    </option>
                                  ))}
                              </select>
                            </div>
                            <div className="choose">
                              <label htmlFor="products">Choose Product</label>
                              <select
                                id="products"
                                onChange={(e) =>
                                  setSelected({
                                    ...selected,
                                    product_id: e.target.value,
                                  })
                                }
                              >
                                <option>Choose product</option>
                                {products &&
                                  products.map((item, index) => (
                                    <option
                                      key={index}
                                      value={item?.product_id}
                                    >
                                      {item?.name}
                                    </option>
                                  ))}
                              </select>
                            </div>
                          </div>
                        </div>
                      </div>
                      {oplData && oplData.length > 0 && (
                        <div className="col-12">
                          <div className="card card-xxl-stretch mb-5 mb-xxl-8">
                            <div className="card-header border-0 pt-5">
                              <h3 className="card-title align-items-start flex-column">
                                <span className="card-label fw-bold fs-3 mb-1">
                                  Products
                                </span>
                                <span className="text-muted mt-1 fw-semibold fs-7">
                                  Total {oplData && oplData.length} Parts of the
                                  Product
                                </span>
                              </h3>
                            </div>
                            <div className="card-body py-3">
                              <div className="tab-content">
                                <div className="table-responsive">
                                  <table className="table table-striped table-bordered table_height">
                                    <thead>
                                      <tr className="border-0">
                                        <th>Product | Shift</th>
                                        <th>Parts Of the Product</th>
                                        <th className=" min-w-150px">
                                          Instruction
                                        </th>
                                        <th>Screen Names</th>
                                      </tr>
                                    </thead>
                                    <tbody>
                                      {oplData.map((item, i) => (
                                        <tr key={i}>
                                          <td>
                                            {item?.product} | {item?.shift}
                                          </td>
                                          <td className="fw-semibold">
                                            {item?.parts}
                                          </td>
                                          <td>
                                            <Image
                                              loader={({ src }) => {
                                                return `uploads/${src}`;
                                              }}
                                              src={item.opl}
                                              alt=""
                                              width={200}
                                              height={100}
                                              loading="lazy"
                                            />
                                          </td>
                                          <td>{item?.screen}</td>
                                        </tr>
                                      ))}
                                    </tbody>
                                  </table>
                                  <div className="text-center py-3">
                                    <button
                                      className="btn fw-bold btn-primary"
                                      onClick={OPLHandler}
                                    >
                                      Send
                                    </button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      )}
                      {/* <div className="col-12">
                        <div className="card card-xxl-stretch mb-5 mb-xxl-8">
                          <div className="card-header border-0 pt-5">
                            <h3 className="card-title align-items-start flex-column">
                              <span className="card-label fw-bold fs-3 mb-1">
                                Change Products Parts
                              </span>
                            </h3>
                          </div>
                          <div className="card-body py-3">
                            <div className="tab-content">
                              <div className="table-responsive">
                                <table className="table table-striped table-bordered table_height">
                                  <thead>
                                    <tr className="border-0">
                                      <th># Id</th>
                                      <th className="min-w-500px">
                                        Product Part Image
                                      </th>
                                      <th>Screens</th>
                                    </tr>
                                  </thead>
                                  <tbody>
                                    <tr>
                                      <td className="fw-semibold">
                                        Product Part 1
                                      </td>
                                      <td className="min-w-500px">
                                        <Image
                                          src={"/images/process.png"}
                                          alt=""
                                          width={300}
                                          height={200}
                                        />
                                      </td>
                                      <td>
                                        <Select
                                          closeMenuOnSelect={false}
                                          components={animatedComponents}
                                          defaultValue={[options[0]]}
                                          isMulti
                                          options={options}
                                        />
                                      </td>
                                    </tr>
                                    <tr>
                                      <td className="fw-semibold">
                                        Product Part 1
                                      </td>
                                      <td className="min-w-500px">
                                        <Image
                                          src={"/images/process.png"}
                                          alt=""
                                          width={300}
                                          height={200}
                                        />
                                      </td>
                                      <td>
                                        <Select
                                          closeMenuOnSelect={false}
                                          components={animatedComponents}
                                          defaultValue={[options[0]]}
                                          isMulti
                                          options={options}
                                        />
                                      </td>
                                    </tr>
                                  </tbody>
                                </table>
                                <div className="text-center py-3">
                                  <button className="btn fw-bold btn-primary">
                                    Send
                                  </button>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div> */}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
